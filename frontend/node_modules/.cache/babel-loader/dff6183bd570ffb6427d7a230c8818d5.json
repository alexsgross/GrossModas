{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\ReactJS\\\\GrossModas\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case \"FETCH_SUCCESS\":\n      return { ...state,\n        products: action.plyload,\n        loading: false\n      };\n\n    case \"FETCH_FAIL\":\n      return { ...state,\n        loading: false,\n        error: action.playload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  _s();\n\n  const params = useParams();\n  const {\n    slug\n  } = params;\n  const [{\n    loading,\n    error,\n    product\n  }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: ''\n  }); //const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n\n      try {\n        const result = await axios.get(\"/api/products\");\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          plyload: result.data\n        });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          playload: error.message\n        });\n      } // setProducts(result.data);\n\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: slug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductScreen, \"6DCqCwTGBTqQJOmxQOIiVynH0As=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Temp/ReactJS/GrossModas/frontend/src/screens/ProductScreen.js"],"names":["useParams","reducer","state","action","type","loading","products","plyload","error","playload","ProductScreen","params","slug","product","dispatch","useReducer","logger","useEffect","fetchData","result","axios","get","data","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWG,QAAAA,OAAO,EAAE;AAApB,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAA5B;AAAqCF,QAAAA,OAAO,EAAE;AAA9C,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWG,QAAAA,OAAO,EAAE,KAApB;AAA2BG,QAAAA,KAAK,EAAEL,MAAM,CAACM;AAAzC,OAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUD,CAXD;;AAaA,SAASQ,aAAT,GAAyB;AAAA;;AACrB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAACY,IAAAA;AAAD,MAAUD,MAAhB;AAEA,QAAM,CAAC;AAACN,IAAAA,OAAD;AAAUG,IAAAA,KAAV;AAAiBK,IAAAA;AAAjB,GAAD,EAA4BC,QAA5B,IAAwCC,UAAU,CAACC,MAAM,CAACf,OAAD,CAAP,EAAkB;AACxEK,IAAAA,QAAQ,EAAE,EAD8D;AAExED,IAAAA,OAAO,EAAE,IAF+D;AAGxEG,IAAAA,KAAK,EAAE;AAHiE,GAAlB,CAAxD,CAJqB,CASvB;;AACAS,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,SAAS,GAAG,YAAY;AAC1BJ,MAAAA,QAAQ,CAAC;AAACV,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;;AACA,UAAI;AACA,cAAMe,MAAM,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,eAAV,CAArB;AACAP,QAAAA,QAAQ,CAAC;AAACV,UAAAA,IAAI,EAAE,eAAP;AAAwBG,UAAAA,OAAO,EAAEY,MAAM,CAACG;AAAxC,SAAD,CAAR;AACH,OAHD,CAGE,OAAOd,KAAP,EAAc;AACZM,QAAAA,QAAQ,CAAC;AAACV,UAAAA,IAAI,EAAE,YAAP;AAAqBK,UAAAA,QAAQ,EAAED,KAAK,CAACe;AAArC,SAAD,CAAR;AACH,OAPyB,CAS3B;;AACF,KAVD;;AAWAL,IAAAA,SAAS;AACZ,GAbQ,EAaN,EAbM,CAAT;AAcE,sBACI;AAAA,2BACE;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7BQF,a;UACUV,S;;;KADVU,a;AA8BT,eAAeA,aAAf","sourcesContent":["import { useParams } from \"react-router-dom\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case 'FETCH_REQUEST':\r\n          return {...state, loading: true};\r\n      case \"FETCH_SUCCESS\":\r\n          return {...state, products: action.plyload, loading: false};\r\n      case \"FETCH_FAIL\":\r\n          return {...state, loading: false, error: action.playload };\r\n      default: \r\n          return state;       \r\n  }\r\n};\r\n\r\nfunction ProductScreen() {\r\n    const params = useParams();\r\n    const {slug } = params;\r\n\r\n    const [{loading, error, product}, dispatch] = useReducer(logger(reducer), {\r\n      products: [],\r\n      loading: true, \r\n      error: '',\r\n  });\r\n  //const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          dispatch({type: \"FETCH_REQUEST\"});\r\n          try {\r\n              const result = await axios.get(\"/api/products\");\r\n              dispatch({type: \"FETCH_SUCCESS\", plyload: result.data});\r\n          } catch (error) {\r\n              dispatch({type: \"FETCH_FAIL\", playload: error.message});\r\n          }\r\n          \r\n         // setProducts(result.data);\r\n      };   \r\n      fetchData(); \r\n  }, []);\r\n    return (\r\n        <div>\r\n          <h1>{slug}</h1>\r\n        </div>    \r\n    );\r\n}\r\nexport default ProductScreen;"]},"metadata":{},"sourceType":"module"}