{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\ReactJS\\\\GrossModas\\\\frontend\\\\src\\\\components\\\\Product.js\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from \"react-router-dom\";\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product(props) {\n  const {\n    product\n  } = props;\n\n  const updateCartHandler = async (item, quantity) => {\n    const {\n      data\n    } = await axios.get(`/api/products/${item._id}`);\n\n    if (data.countInStock < quantity) {\n      window.alert(' Desculpe, produto indisponível');\n      return;\n    }\n\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...item,\n        quantity\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${product.slug}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image,\n        className: \"card-img-top\",\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/products/${product.slug}`,\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rating, {\n        rating: product.rating,\n        numReviews: product.numReviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"R$ \", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addToCartHandler(product),\n        children: \"Adicionar ao Carrinho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Temp/ReactJS/GrossModas/frontend/src/components/Product.js"],"names":["Card","Button","Link","Rating","axios","useContext","Store","Product","props","product","updateCartHandler","item","quantity","data","get","_id","countInStock","window","alert","ctxDispatch","type","payload","slug","image","name","rating","numReviews","price","addToCartHandler"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;;AAEA,QAAME,iBAAiB,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;AAChD,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,GAAN,CAAW,iBAAgBH,IAAI,CAACI,GAAI,EAApC,CAAvB;;AACA,QAAIF,IAAI,CAACG,YAAL,GAAoBJ,QAAxB,EAAkC;AACjCK,MAAAA,MAAM,CAACC,KAAP,CAAa,iCAAb;AACA;AACD;;AACDC,IAAAA,WAAW,CAAC;AACTC,MAAAA,IAAI,EAAE,eADG;AAETC,MAAAA,OAAO,EAAE,EAAE,GAAGV,IAAL;AAAWC,QAAAA;AAAX;AAFA,KAAD,CAAX;AAIA,GAVH;;AAYA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYH,OAAO,CAACa,IAAK,EAApC;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEb,OAAO,CAACc,KAAlB;AAAyB,QAAA,SAAS,EAAC,cAAnC;AAAkD,QAAA,GAAG,EAAEd,OAAO,CAACe;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,aAAYf,OAAO,CAACa,IAAK,EAApC;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAab,OAAO,CAACe;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAIG,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEf,OAAO,CAACgB,MAAxB;AAAgC,QAAA,UAAU,EAAEhB,OAAO,CAACiB;AAApD;AAAA;AAAA;AAAA;AAAA,cAJH,eAKG,QAAC,IAAD,CAAM,IAAN;AAAA,0BAAejB,OAAO,CAACkB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,eAMG,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAACnB,OAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;KA9BQF,O;AA+BT,eAAeA,OAAf","sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from './Rating';\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { Store } from '../Store';\r\n\r\nfunction Product(props) {\r\n    const { product } = props;\r\n    \r\n    const updateCartHandler = async (item, quantity) => {\r\n        const { data } = await axios.get(`/api/products/${item._id}`);\r\n        if (data.countInStock < quantity) {\r\n         window.alert(' Desculpe, produto indisponível');\r\n         return;\r\n       }\r\n       ctxDispatch({\r\n          type: 'CART_ADD_ITEM',\r\n          payload: { ...item, quantity }, \r\n       });\r\n      };\r\n\r\n    return (\r\n        <Card>\r\n            <Link to={`/products/${product.slug}`}>\r\n                <img src={product.image} className=\"card-img-top\" alt={product.name}/>\r\n            </Link> \r\n            <Card.Body>\r\n                <Link to={`/products/${product.slug}`}>                \r\n                    <Card.Title>{product.name}</Card.Title>\r\n               </Link>   \r\n               <Rating rating={product.rating} numReviews={product.numReviews} />\r\n               <Card.Text>R$ {product.price}</Card.Text> \r\n               <Button onClick={() => addToCartHandler(product)}>Adicionar ao Carrinho</Button>        \r\n            </Card.Body>\r\n        </Card>\r\n );\r\n}\r\nexport default Product;"]},"metadata":{},"sourceType":"module"}