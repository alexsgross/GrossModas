{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\ReactJS\\\\GrossModas\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case \"FETCH_SUCCESS\":\n      return { ...state,\n        product: action.plyload,\n        loading: false\n      };\n\n    case \"FETCH_FAIL\":\n      return { ...state,\n        loading: false,\n        error: action.playload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  _s();\n\n  const params = useParams();\n  const {\n    slug\n  } = params;\n  const [{\n    loading,\n    error,\n    product\n  }, dispatch] = useReducer(reducer, {\n    product: [],\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          plyload: result.data\n        });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          playload: error.message\n        });\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 8\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img-large\",\n        src: product.image,\n        alt: product.name,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProductScreen, \"RxaR0qGddweBQo9EUmMlM3PvJms=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Temp/ReactJS/GrossModas/frontend/src/screens/ProductScreen.js"],"names":["axios","useEffect","useReducer","useParams","Col","Row","reducer","state","action","type","loading","product","plyload","error","playload","ProductScreen","params","slug","dispatch","fetchData","result","get","data","message","image","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWG,QAAAA,OAAO,EAAE;AAApB,OAAP;;AACJ,SAAK,eAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWI,QAAAA,OAAO,EAAEH,MAAM,CAACI,OAA3B;AAAoCF,QAAAA,OAAO,EAAE;AAA7C,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWG,QAAAA,OAAO,EAAE,KAApB;AAA2BG,QAAAA,KAAK,EAAEL,MAAM,CAACM;AAAzC,OAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUD,CAXD;;AAaA,SAASQ,aAAT,GAAyB;AAAA;;AACrB,QAAMC,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM;AAACc,IAAAA;AAAD,MAAUD,MAAhB;AAEA,QAAM,CAAC;AAACN,IAAAA,OAAD;AAAUG,IAAAA,KAAV;AAAiBF,IAAAA;AAAjB,GAAD,EAA4BO,QAA5B,IAAwChB,UAAU,CAACI,OAAD,EAAU;AAChEK,IAAAA,OAAO,EAAE,EADuD;AAEhED,IAAAA,OAAO,EAAE,IAFuD;AAGhEG,IAAAA,KAAK,EAAE;AAHyD,GAAV,CAAxD;AAKFZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,SAAS,GAAG,YAAY;AAC1BD,MAAAA,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;;AACA,UAAI;AACA,cAAMW,MAAM,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAW,sBAAqBJ,IAAK,EAArC,CAArB;AACAC,QAAAA,QAAQ,CAAC;AAACT,UAAAA,IAAI,EAAE,eAAP;AAAwBG,UAAAA,OAAO,EAAEQ,MAAM,CAACE;AAAxC,SAAD,CAAR;AACH,OAHD,CAGE,OAAOT,KAAP,EAAc;AACZK,QAAAA,QAAQ,CAAC;AAACT,UAAAA,IAAI,EAAE,YAAP;AAAqBK,UAAAA,QAAQ,EAAED,KAAK,CAACU;AAArC,SAAD,CAAR;AACH;AAEJ,KATD;;AAUAJ,IAAAA,SAAS;AACZ,GAZQ,EAYN,CAACF,IAAD,CAZM,CAAT;AAcE,SAAOP,OAAO,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW,GAEVG,KAAK,gBACP;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,GAAG,EAAEF,OAAO,CAACa,KAFf;AAGE,QAAA,GAAG,EAAEb,OAAO,CAACc,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UALF;AAmBH;;GA1CQV,a;UACUZ,S;;;KADVY,a;AA2CT,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n      case 'FETCH_REQUEST':\r\n          return {...state, loading: true};\r\n      case \"FETCH_SUCCESS\":\r\n          return {...state, product: action.plyload, loading: false};\r\n      case \"FETCH_FAIL\":\r\n          return {...state, loading: false, error: action.playload };\r\n      default: \r\n          return state;       \r\n  }\r\n};\r\n\r\nfunction ProductScreen() {\r\n    const params = useParams();\r\n    const {slug } = params;\r\n\r\n    const [{loading, error, product}, dispatch] = useReducer(reducer, {\r\n      product: [],\r\n      loading: true, \r\n      error: '',\r\n  });\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          dispatch({type: \"FETCH_REQUEST\"});\r\n          try {\r\n              const result = await axios.get(`/api/products/slug/${slug}`);\r\n              dispatch({type: \"FETCH_SUCCESS\", plyload: result.data});\r\n          } catch (error) {\r\n              dispatch({type: \"FETCH_FAIL\", playload: error.message});\r\n          } \r\n       \r\n      };   \r\n      fetchData(); \r\n  }, [slug]);\r\n\r\n    return loading ? (\r\n       <div>Carregando...</div>\r\n    ) : error ? (\r\n      <div>{error}</div>\r\n    ) :(\r\n      <div>\r\n        <Row>\r\n          <Col md={6}>  </Col>\r\n          <img\r\n            className=\"img-large\"\r\n            src={product.image}\r\n            alt={product.name}\r\n            > </img>\r\n        \r\n          <Col md={3}></Col>\r\n          <Col md={3}></Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n}\r\nexport default ProductScreen;"]},"metadata":{},"sourceType":"module"}